class Solution:
    def findMin(self, nums: List[int]) -> int:
        
        # check mid, if RHS > mid then check left else its highest and return i+1

        l,r = 0,len(nums)-1
        currmin = float('inf')
        
        # if len(nums)==1:
        #     return nums[0]
        while l<=r:
            mid = l+ ((r-l) //2)
            currmin = min(currmin, nums[mid])

            # if mid more than RHS then min in RHS
            if nums[mid] > nums[r]:
                # min is on the left
                l = mid+1
            # min is in the left
            else :
                r = mid-1

        return currmin
